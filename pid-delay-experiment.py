import numpy as np
import matplotlib.pyplot as plt
DT_CTRL = 0.01


class LatControlINDI:
  def __init__(self):
    self.reset()

  def reset(self):
    self.delayed_output = 0.

  def update(self, output_steer, RC=1):
    alpha = 1. - DT_CTRL / (RC + DT_CTRL)
    self.delayed_output = self.delayed_output * alpha + output_steer * (1. - alpha)

    return self.delayed_output


class DerivativeDelayedSmoothing:
  def __init__(self):
    self.reset()

  def reset(self):
    self.delayed_output = 0.

  def update(self, output_steer, RC=1):
    alpha = 1. - DT_CTRL / (RC + DT_CTRL)
    self.delayed_output = self.delayed_output * alpha + output_steer * (1. - alpha)
    output = output_steer - (self.delayed_output - output_steer)

    return output


class DerivativeSmoothing:
  def __init__(self):
    self.reset()

  def reset(self):
    self.last_output = 0.

  def update(self, output_steer):
    output = output_steer - (self.last_output - output_steer) * 10  # too noisy
    self.last_output = output_steer
    return output


indi = LatControlINDI()

# A fake desired torque to the wheel from any lat controller
# y = np.concatenate((np.linspace(0, 0, 50), np.linspace(0, 400, 10), np.linspace(400, 400, 100), np.linspace(400, 50, 10), np.linspace(50, 0, 100), np.linspace(0, -200, 10), np.linspace(-200, -850, 20), np.linspace(-850, 0, 150)))
y = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.15331220626831055, -0.15405434370040894, -0.1547972857952118, -0.1346496343612671, -0.11431922763586044, -0.09327225387096405, -0.07150764018297195, -0.041907522827386856, -0.034842848777770996, -0.027630111202597618, -0.02026909589767456, -0.012759584933519363, -0.005101364571601152, -0.005269899033010006, 0.0025372467935085297, 0.010493534617125988, 0.01859918050467968, 0.01859918050467968, 0.04395769163966179, 0.0526629239320755, 0.061518594622612, 0.0705249160528183, 0.07968210428953171, 0.08899038285017014, 0.0984499529004097, 0.1080610379576683, 0.11782386153936386, 0.12773862481117249, 0.13780555129051208, 0.14802485704421997, 0.15839676558971405, 0.16892147064208984, 0.17959921061992645, 0.17959150671958923, 0.1886824369430542, 0.196986123919487, 0.2081175595521927, 0.23081417381763458, 0.2424079328775406, 0.254156231880188, 0.2660592794418335, 0.278117299079895, 0.2903304994106293, 0.29042893648147583, 0.3027975261211395, 0.31532174348831177, 0.32800179719924927, 0.35368064045906067, 0.3668294847011566, 0.3801349997520447, 0.39359742403030396, 0.40721699595451355, 0.4209938943386078, 0.43492835760116577, 0.4490205645561218, 0.46327078342437744, 0.47767922282218933, 0.4922460615634918, 0.5, 0.5, 0.5, 0.5, 0.5, 0.4849039912223816, 0.47365233302116394, 0.46260395646095276, 0.45404037833213806, 0.45955488085746765, 0.4462568461894989, 0.43438318371772766, 0.42555636167526245, 0.41519463062286377, 0.4034472107887268, 0.39038947224617004, 0.3770943880081177, 0.3638131320476532, 0.3594719469547272, 0.36010146141052246, 0.34772565960884094, 0.33506491780281067, 0.3213941156864166, 0.3085765838623047, 0.2983188331127167, 0.2849745452404022, 0.2725222706794739, 0.25945210456848145, 0.24632178246974945, 0.2311364710330963, 0.21921460330486298, 0.2083401381969452, 0.19549234211444855, 0.18371273577213287, 0.1707249879837036, 0.1575833559036255, 0.14749158918857574, 0.13660402595996857, 0.12650030851364136, 0.11539920419454575, 0.10388633608818054, 0.09256765991449356, 0.08410295844078064, 0.07480568438768387, 0.06459911912679672, 0.054646097123622894, 0.04428846389055252, 0.03293782100081444, 0.024429313838481903, 0.015811286866664886, 0.007029436063021421, -0.002436076756566763, -0.012149011716246605, -0.02234773524105549, -0.029933296144008636, -0.03803978115320206, -0.04643145948648453, -0.05587710440158844, -0.06572996079921722, -0.0750560536980629, -0.09508409351110458, -0.10291226953268051, -0.11165282130241394, -0.11997821927070618, -0.12889210879802704, -0.13532088696956635, -0.14252708852291107, -0.15051618218421936, -0.15937939286231995, -0.1559024602174759, -0.16586251556873322, -0.17320115864276886, -0.18103188276290894, -0.1892159879207611, -0.19765861332416534, -0.20639006793498993, -0.21546293795108795, -0.2220228910446167, -0.22888068854808807, -0.23619705438613892, -0.24500662088394165, -0.25405290722846985, -0.26347723603248596, -0.2703735828399658, -0.2780255973339081, -0.298586905002594, -0.30649513006210327, -0.31463202834129333, -0.32313820719718933, -0.3166958689689636, -0.32394862174987793, -0.33181968331336975, -0.3396652936935425, -0.34831058979034424, -0.3569307029247284, -0.37558627128601074, -0.38301342725753784, -0.3904528319835663, -0.3987973630428314, -0.39496156573295593, -0.4010971486568451, -0.40736860036849976, -0.4141659736633301, -0.4219987392425537, -0.4295523762702942, -0.44997620582580566, -0.45585158467292786, -0.46300047636032104, -0.4698573648929596, -0.46469438076019287, -0.4729973375797272, -0.4810485541820526, -0.4868169128894806, -0.4937697649002075, -0.5004498362541199, -0.5087664723396301, -0.5167472958564758, -0.5259094834327698, -0.5326991081237793, -0.5388368368148804, -0.5580465793609619, -0.5650773048400879, -0.572360634803772, -0.5799461603164673, -0.5853436589241028, -0.5910779237747192, -0.5979549884796143, -0.6050172448158264, -0.6120159029960632, -0.6076319813728333, -0.6128792762756348, -0.6181672811508179, -0.624323308467865, -0.6310319900512695, -0.6379356384277344, -0.6447122693061829, -0.6494265198707581, -0.6552049517631531, -0.661565363407135, -0.6675547957420349, -0.6854676604270935, -0.6898009181022644, -0.6950764060020447, -0.7010509371757507, -0.7071380019187927, -0.7134724259376526, -0.7197349071502686, -0.7240324020385742, -0.7286077737808228, -0.722944438457489, -0.7289156317710876, -0.7345600724220276, -0.7403454780578613, -0.7442343235015869, -0.7482954859733582, -0.7529438138008118, -0.7582637071609497, -0.7635414004325867, -0.7696389555931091, -0.7757586240768433, -0.779975175857544, -0.7839750051498413, -0.7887026071548462, -0.7938721776008606, -0.7995087504386902, -0.8144801259040833, -0.8190286159515381, -0.8241739869117737, -0.8296449780464172, -0.8238852620124817, -0.8297384977340698, -0.8337556719779968, -0.8377216458320618, -0.8424038887023926, -0.8468313217163086, -0.852133572101593, -0.8579457402229309, -0.8619475960731506, -0.8667924404144287, -0.8715049028396606, -0.875825047492981, -0.8807469606399536, -0.8854613304138184, -0.8884965777397156, -0.8921911716461182, -0.9067853093147278, -0.9109225273132324, -0.9156070947647095, -0.9199108481407166, -0.9118148684501648, -0.9153885245323181, -0.9190955758094788, -0.9227229952812195, -0.9274105429649353, -0.9319212436676025, -0.9348151683807373, -0.9387041926383972, -0.9425638318061829, -0.9479777216911316, -0.9535373449325562, -0.9573917388916016, -0.9606302380561829, -0.9646221995353699, -0.9695516228675842, -0.975321888923645, -0.9905616641044617, -0.9936749339103699, -0.9984480738639832, -1.0, -0.9947311878204346, -0.9997715353965759, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]


x = np.linspace(0, len(y) / 100, len(y))
plt.plot(x, y, label='original output')

RC = [.5]  # timeConstantV for INDI (output smoothing)
for _RC in RC:
  indi.reset()
  y_delayed = []
  for _y in y:
    y_delayed.append(indi.update(_y, _RC))
  plt.plot(x, y_delayed, label=f'delayed output (RC={_RC})')


# y_new = []
# for idx, _y in enumerate(y):
#   if idx < 50:
#     y_new.append(0)
#     continue
#   diff = y[idx - 50] - _y
#   y_new.append(_y - diff)
#
# plt.plot(x, y_new, label='anti-hysteresis')

y_new = []
derivDelayedSmooth = DerivativeDelayedSmoothing()
for idx, _y in enumerate(y):
  y_new.append(derivDelayedSmooth.update(_y, .5))

plt.plot(x, y_new, label='anti-hysteresis std')


# y_new = []
# derivSmooth = DerivativeSmoothing()
# for idx, _y in enumerate(y):
#   y_new.append(derivSmooth.update(_y))
#
# plt.plot(x, y_new, label='anti-hysteresis pure deriv')



plt.xlabel('seconds')
plt.ylabel('torque output')
plt.legend()

